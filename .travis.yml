sudo: required
dist: trusty

env:
  global:
    - TILEDB_BUILD_DIR=$TRAVIS_BUILD_DIR/build

matrix:
  include:
    - name: "Basic build"
      os: linux

    - name: "Cloud support"
      os: linux
      env: HDFS_SUPPORT=true

install:
    # Install cmake, lcov, MPICH
    - sudo apt-get -y install cmake lcov mpich
    # Install zlib, OpenSSL and LZ4
    - sudo apt-get -y install zlib1g-dev libssl-dev libgtest-dev liblz4-dev uuid-dev
    # Install Zstandard
    #- wget https://github.com/facebook/zstd/archive/v1.0.0.tar.gz
    #- tar xf v1.0.0.tar.gz
    #- cd zstd-1.0.0
    #- sudo make install PREFIX='/usr'
    - cd $TRAVIS_BUILD_DIR
    # Install Blosc
    #- git clone https://github.com/Blosc/c-blosc 
    #- cd c-blosc
    #- mkdir build
    #- cd build
    #- cmake -DCMAKE_INSTALL_PREFIX='/usr' ..
    #- cmake --build .
    #- sudo cmake --build . --target install

    # Hadoop install
    - if [[ $HDFS_SUPPORT == true ]]; then
        source $TRAVIS_BUILD_DIR/.travis/scripts/install_hadoop.sh;
        echo "CLASSPATH=" $CLASSPATH;
      fi

    - cd $TRAVIS_BUILD_DIR
    # Install lcov to coveralls conversion + upload tool
    - gem install coveralls-lcov

    # Build TileDB
    - rm -rf $TILEDB_BUILD_DIR
    - mkdir -p $TILEDB_BUILD_DIR
    - cd $TILEDB_BUILD_DIR
    - cmake .. -DCMAKE_BUILD_TYPE=Coverage 
    - make -j 4

before_script:
    - lcov --directory $TILEDB_BUILD_DIR --zerocounters

script:
    - if [[ $HDFS_SUPPORT == true ]]; then
       echo "Run HDFS tests";
       make examples;
       cd examples;
       $TRAVIS_BUILD_DIR/examples/run_examples.sh "hdfs://localhost:9000/travis_test";
       diff travis_test.log $TRAVIS_BUILD_DIR/examples/expected_results;
      else
        make tests -j 4;
      fi

after_success:
    - cd $TILEDB_BUILD_DIR
    - find test -name *.gcda -type f -delete
    - find examples -name *.gcda -type f -delete
    - find deps -name *.gcda -type f -delete
    - lcov --directory core --capture --output-file coverage.info
    - lcov --remove coverage.info '/opt*' '*/usr/*' -o coverage.info
    - lcov --list coverage.info
    # Uploading report to CodeCov
    - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
